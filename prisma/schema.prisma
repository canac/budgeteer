// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider     = "prisma-client"
  output       = "../generated/prisma"
  moduleFormat = "esm"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Budget {
  id               String           @id @default(uuid(7))
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  month            String
  income           Int
  budgetCategories BudgetCategory[]
}

model Category {
  id                    String                @id @default(uuid(7))
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  name                  String
  fund                  Boolean               @default(false)
  transactionCategories TransactionCategory[]
  budgetCategories      BudgetCategory[]
  transfersFrom         Transfer[]            @relation("TransferSource")
  transfersTo           Transfer[]            @relation("TransferDestination")
}

model BudgetCategory {
  id             String   @id @default(uuid(7))
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  budgetedAmount Int      @default(0)
  categoryId     String
  budgetId       String
  category       Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  budget         Budget   @relation(fields: [budgetId], references: [id], onDelete: Cascade)

  @@unique([categoryId, budgetId])
}

model Transaction {
  id                    String                @id @default(uuid(7))
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  amount                Int
  date                  DateTime
  vendor                String
  description           String?
  transactionCategories TransactionCategory[]
  transfer              Transfer?
}

model TransactionCategory {
  id            String      @id @default(uuid(7))
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  amount        Int
  transactionId String
  categoryId    String
  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  category      Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([transactionId, categoryId])
}

model Transfer {
  id                    String      @id @default(uuid(7))
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  amount                Int
  sourceCategoryId      String
  destinationCategoryId String
  transactionId         String      @unique
  transaction           Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  sourceCategory        Category    @relation("TransferSource", fields: [sourceCategoryId], references: [id], onDelete: Cascade)
  destinationCategory   Category    @relation("TransferDestination", fields: [destinationCategoryId], references: [id], onDelete: Cascade)
}
